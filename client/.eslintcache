[{"/Volumes/Samsung T5/Projects/popcorn/client/src/index.js":"1","/Volumes/Samsung T5/Projects/popcorn/client/src/App.js":"2","/Volumes/Samsung T5/Projects/popcorn/client/src/reportWebVitals.js":"3","/Volumes/Samsung T5/Projects/popcorn/client/src/components/Header.js":"4","/Volumes/Samsung T5/Projects/popcorn/client/src/components/Footer.js":"5","/Volumes/Samsung T5/Projects/popcorn/client/src/pages/Homepage.js":"6","/Volumes/Samsung T5/Projects/popcorn/client/src/components/Movie.js":"7","/Volumes/Samsung T5/Projects/popcorn/client/src/components/Rating.js":"8","/Volumes/Samsung T5/Projects/popcorn/client/src/pages/Moviepage.js":"9","/Volumes/Samsung T5/Projects/popcorn/client/src/store.js":"10","/Volumes/Samsung T5/Projects/popcorn/client/src/reducers/movieReducers.js":"11","/Volumes/Samsung T5/Projects/popcorn/client/src/constants/movieConstants.js":"12","/Volumes/Samsung T5/Projects/popcorn/client/src/actions/movieActions.js":"13","/Volumes/Samsung T5/Projects/popcorn/client/src/components/Loader.js":"14","/Volumes/Samsung T5/Projects/popcorn/client/src/components/Message.js":"15","/Volumes/Samsung T5/Projects/popcorn/client/src/reducers/userReducers.js":"16","/Volumes/Samsung T5/Projects/popcorn/client/src/constants/userConstants.js":"17","/Volumes/Samsung T5/Projects/popcorn/client/src/pages/Loginpage.js":"18","/Volumes/Samsung T5/Projects/popcorn/client/src/components/FormContainer.js":"19","/Volumes/Samsung T5/Projects/popcorn/client/src/actions/userActions.js":"20","/Volumes/Samsung T5/Projects/popcorn/client/src/pages/Registerpage.js":"21","/Volumes/Samsung T5/Projects/popcorn/client/src/pages/Profilepage.js":"22"},{"size":389,"mtime":1609679193000,"results":"23","hashOfConfig":"24"},{"size":940,"mtime":1609665469000,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1609599531000,"results":"26","hashOfConfig":"24"},{"size":2105,"mtime":1609657733000,"results":"27","hashOfConfig":"24"},{"size":307,"mtime":1609602047000,"results":"28","hashOfConfig":"24"},{"size":952,"mtime":1609615596000,"results":"29","hashOfConfig":"24"},{"size":830,"mtime":1609608008000,"results":"30","hashOfConfig":"24"},{"size":1603,"mtime":1609604203000,"results":"31","hashOfConfig":"24"},{"size":3199,"mtime":1609616223000,"results":"32","hashOfConfig":"24"},{"size":992,"mtime":1609666062000,"results":"33","hashOfConfig":"24"},{"size":986,"mtime":1609615853000,"results":"34","hashOfConfig":"24"},{"size":337,"mtime":1609615664000,"results":"35","hashOfConfig":"24"},{"size":1084,"mtime":1609615983000,"results":"36","hashOfConfig":"24"},{"size":384,"mtime":1609615485000,"results":"37","hashOfConfig":"24"},{"size":240,"mtime":1609615552000,"results":"38","hashOfConfig":"24"},{"size":2014,"mtime":1609667695000,"results":"39","hashOfConfig":"24"},{"size":833,"mtime":1609665822000,"results":"40","hashOfConfig":"24"},{"size":2129,"mtime":1609656909000,"results":"41","hashOfConfig":"24"},{"size":331,"mtime":1609656150000,"results":"42","hashOfConfig":"24"},{"size":3688,"mtime":1609667633000,"results":"43","hashOfConfig":"24"},{"size":10155,"mtime":1609944341000,"results":"44","hashOfConfig":"24"},{"size":5775,"mtime":1609667808000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"d7cccf",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Volumes/Samsung T5/Projects/popcorn/client/src/index.js",[],["93","94"],"/Volumes/Samsung T5/Projects/popcorn/client/src/App.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/reportWebVitals.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/components/Header.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/components/Footer.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/pages/Homepage.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/components/Movie.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/components/Rating.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/pages/Moviepage.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/store.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/reducers/movieReducers.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/constants/movieConstants.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/actions/movieActions.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/components/Loader.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/components/Message.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/reducers/userReducers.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/constants/userConstants.js",[],["95","96"],"/Volumes/Samsung T5/Projects/popcorn/client/src/pages/Loginpage.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/components/FormContainer.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/actions/userActions.js",[],"/Volumes/Samsung T5/Projects/popcorn/client/src/pages/Registerpage.js",["97"],"import React, { useEffect, useState } from 'react'\nimport { Button, Col, Form, Row } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register } from '../actions/userActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nconst Registerpage = ({ location, history }) => {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [initialDate, setInitialDate] = useState(new Date())\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [contact, setContact] = useState('')\n  const [genres, setGenres] = useState([])\n  const [values, setValues] = useState([])\n  const [addressLineOne, setAddressLineOne] = useState('')\n  const [addressLineTwo, setAddressLineTwo] = useState('')\n  const [city, setCity] = useState('')\n  const [pincode, setPincode] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const options = [\n    { id: 1, text: 'Action', value: 'Action' },\n    { id: 2, text: 'Adventure', value: 'Adventure' },\n    { id: 3, text: 'Comedy', value: 'Comedy' },\n    { id: 4, text: 'Crime', value: 'Crime' },\n    { id: 5, text: 'Drama', value: 'Drama' },\n    { id: 6, text: 'Fantasy', value: 'Fantasy' },\n    { id: 7, text: 'Historical', value: 'Historical' },\n    { id: 8, text: 'Horror', value: 'Horror' },\n    { id: 9, text: 'Magical', value: 'Magical' },\n    { id: 10, text: 'Mystery', value: 'Mystery' },\n    { id: 11, text: 'Paranoid Fiction', value: 'Paranoid Fiction' },\n    { id: 12, text: 'Philosophical', value: 'Philosophical' },\n    { id: 13, text: 'Political', value: 'Political' },\n    { id: 14, text: 'Romance', value: 'Romance' },\n    { id: 15, text: 'Saga', value: 'Saga' },\n    { id: 16, text: 'Satire', value: 'Satire' },\n    { id: 17, text: 'Science Fiction', value: 'Science Fiction' },\n    { id: 18, text: 'Social', value: 'Social' },\n    { id: 19, text: 'Speculative', value: 'Speculative' },\n    { id: 20, text: 'Thriller', value: 'Thriller' },\n    { id: 21, text: 'Urban', value: 'Urban' },\n    { id: 22, text: 'Western', value: 'Western' },\n  ]\n\n  const dispatch = useDispatch()\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  const userRegister = useSelector(state => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  useEffect(() => {\n    if (userInfo.firstName) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const isFormEmpty = () => {\n    return (\n      !firstName.length ||\n      !password.length ||\n      !email.length ||\n      !confirmPassword.length ||\n      !contact.length ||\n      !addressLineOne.length ||\n      !city.length ||\n      !pincode.length\n    )\n  }\n\n  const isPasswordValid = () => {\n    if (password.length < 6) {\n      setMessage('Insufficient password length')\n      return false\n    } else if (password !== confirmPassword) {\n      setMessage(\"Passwords don't match\")\n      return false\n    } else {\n      return true\n    }\n  }\n\n  const isContactValid = () => {\n    if (contact.length !== 10) {\n      return false\n    }\n    for (let i = 0; i < contact.length; i++) {\n      if (contact[i] >= '0' && contact[i] <= '9') {\n        continue\n      } else {\n        return false\n      }\n    }\n    return true\n  }\n\n  const isDateOfBirthValid = () => {\n    const today = new Date()\n    if (today.getFullYear() < initialDate.getFullYear()) {\n      return false\n    } else if (today.getFullYear() > initialDate.getFullYear()) {\n      return true\n    } else {\n      if (today.getMonth() < initialDate.getMonth()) {\n        return false\n      } else if (today.getMonth() > initialDate.getMonth()) {\n        return true\n      } else {\n        if (today.getDate() < initialDate.getDate()) {\n          return false\n        } else {\n          return true\n        }\n      }\n    }\n  }\n\n  const isFormValid = () => {\n    if (isFormEmpty()) {\n      setMessage('Please fill out all fields')\n      return false\n    } else if (!isPasswordValid()) {\n      return false\n    } else if (!isContactValid()) {\n      setMessage('Please enter a valid contact number')\n      return false\n    } else if (!isDateOfBirthValid()) {\n      setMessage('Please enter a valid date of birth')\n      return false\n    } else {\n      return true\n    }\n  }\n\n  const getFormattedDate = date => {\n    const d = new Date(date)\n    let month = '' + (d.getMonth() + 1)\n    let day = '' + d.getDate()\n    let year = d.getFullYear()\n    if (month.length < 2) {\n      month = '0' + month\n    }\n    if (day.length < 2) {\n      day = '0' + day\n    }\n    return [year, month, day].join('-')\n  }\n\n  const submitHandler = e => {\n    e.preventDefault()\n\n    if (isFormValid()) {\n      setMessage(null)\n      const dateOfBirth = getFormattedDate(initialDate)\n      dispatch(\n        register(\n          firstName,\n          lastName,\n          email,\n          dateOfBirth,\n          password,\n          contact,\n          genres,\n          addressLineOne,\n          addressLineTwo,\n          city,\n          pincode\n        )\n      )\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {loading && <Loader />}\n      {error && <Message>{error}</Message>}\n      {message && <Message>{message}</Message>}\n      <Form onSubmit={submitHandler}>\n        <Form.Row>\n          <Form.Group controlId=\"firstName\">\n            <Form.Label>First Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your first name\"\n              value={firstName}\n              onChange={e => setFirstName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"lastName\">\n            <Form.Label>Last Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter your last name\"\n              value={lastName}\n              onChange={e => setLastName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n        </Form.Row>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter your email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"dateOfBirth\">\n          <Form.Label>Date of Birth</Form.Label>\n          <br />\n          <DatePicker\n            selected={initialDate}\n            onChange={date => setInitialDate(date)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Confirm your Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm your password\"\n            value={confirmPassword}\n            onChange={e => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"contact\">\n          <Form.Label>Contact</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your contact number\"\n            value={contact}\n            onChange={e => setContact(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Select your preferred genres</Form.Label>\n          <Form.Control\n            as=\"select\"\n            multiple\n            value={values}\n            onChange={e => {\n              const value = e.target.value\n              const index = values.indexOf(value)\n              if (index > -1) {\n                values.splice(index, 1)\n              } else {\n                values.push(value)\n              }\n              setGenres(values)\n            }}\n          >\n            {options.map(option => (\n              <option key={option.id}>{option.text}</option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"addressLineOne\">\n          <Form.Label>Address Line 1</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your address\"\n            value={addressLineOne}\n            onChange={e => setAddressLineOne(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"addressLineTwo\">\n          <Form.Label>Address Line 2</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your address\"\n            value={addressLineTwo}\n            onChange={e => setAddressLineTwo(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your city\"\n            value={city}\n            onChange={e => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"pincode\">\n          <Form.Label>Pincode</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter your address\"\n            value={pincode}\n            onChange={e => setPincode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          Existing customer?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login here\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default Registerpage\n","/Volumes/Samsung T5/Projects/popcorn/client/src/pages/Profilepage.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"98","replacedBy":"102"},{"ruleId":"100","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":21,"column":18,"nodeType":"106","messageId":"107","endLine":21,"endColumn":27},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],["108"],["109"],"no-unused-vars","'setValues' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]